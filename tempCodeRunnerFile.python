# https://stackoverflow.com/questions/60748850/single-linked-list-python-header-and-tail

class Node:
    def __init__(self, value=None):
        self.value = value
        self.nextNode = None


class LinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

    def insert(self, value):
        new_node = Node(value)
        if not self.head:
            self.head = new_node
        elif self.tail:
            self.tail.nextNode = new_node
            self.tail = new_node
        else:
            self.head.nextNode = new_node
            self.tail = new_node

    # Masih proses
    # @classmethod
    def nodeCount(self):
        count = 0
        curr = self.head
        while(curr!=None):
            count += 1
            curr = curr.nextNode
        return count



list1 = LinkedList()
list1.insert(23)
list1.insert(50)
list1.insert(40)
list1.insert(99)

node = list1.head
print('(head)', end=' -> ')
while node:
    print(node.value, end=' -> ')
    node = node.nextNode
print('(tail)')

print(list1.nodeCount())